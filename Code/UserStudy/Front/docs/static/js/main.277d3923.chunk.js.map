{"version":3,"sources":["actions/index.js","reducers/index.js","utils.js","components/Welcome.js","components/Declaration.js","components/Introduction.js","components/PhaseOne.js","components/Question.js","components/Histogram.js","components/three.js","components/ConvexHull.js","components/Legend.js","components/PreferenceSpace.js","components/Visuals.js","components/Stats.js","components/Interaction.js","components/PhaseTwo.js","components/Result.js","components/End.js","components/App.js","index.js"],"names":["setActiveComponent","component","type","toggleMask","attr","val","mask","_defineProperty","changeMode","mode","combineReducers","activeComponent","state","arguments","length","undefined","action","points","labels","attributes","candidates","forEach","_ref","_ref2","_slicedToArray","_objectSpread","prunedPoints","indices","map","idx","step","concat","_toConsumableArray","leftPoints","filter","indexOf","numLeftPoints","prev","vertices","scores","userName","name","userEmail","email","interactionResults","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","parsePoints","text","trim","split","line","str","parseFloat","parseLabels","loadDataset","_asyncToGenerator","_callee","pointsURL","labelsURL","response","_context","fetch","t0","t1","t2","t3","_x","_x2","apply","selectCandidates","ranges","maxPoints","low","high","point","isValid","j","array2Vector2D","array","vector","window","Module","VecVecDouble","arr","vec","VectorDouble","x","push_back","delete","vector2Array","size","get","Welcome","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","handleStart","strName","inputs","current","strEmail","start","alert","handleModeChange","event","target","React","createRef","_createClass","createElement","className","style","maxWidth","fontSize","textAlign","placeholder","ref","width","onClick","Component","connect","dispatch","Declaration","Introduction","PhaseOne","_this$props$attribute","config","range","startAlgorithm","_this2","_ref3","_ref4","disabled","checked","onChange","id","htmlFor","_ref5","setCandidates","SIMPLEX","RANDOM","Question","choose","option","trs","pair","tds","toString","console","log","interRR","runner","stopInteraction","nextPair","setState","Indicess","getRanking","setLeftPoints","Scores","getScore","setScore","showResult","smallerBetter","VectorInt","candidatesVec","AlgorithmRunner","ths","data-toggle","title","getNumQuestion","interResults","prunePoints","updateConvexHull","Histogram","_onMouseLeave","hintValue","_onNearestX","index","data","height","FlexibleXYPlot","onMouseLeave","XAxis","tickValues","tickFormat","ticks","fill","YAxis","ChartLabel","includeMargin","xPercent","yPercent","transform","textAnchor","VerticalBarSeries","color","onNearestX","animation","Hint","y","num","THREE","require","SCALE","FACTOR","ConvexHull","_len","args","Array","_key","drawGeometry","vertex","scaled_vertex","_construct","Vector3","geometry","ConvexGeometry","material","MeshBasicMaterial","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","opacity","transparent","mesh","Mesh","geo","EdgesGeometry","mat","LineBasicMaterial","linewidth","wireframe","LineSegments","add","scene","addAxes","axes","AxesHelper","typeface","font","Font","Math","PI","sqrt","_mesh$position","_mesh$rotation","position","rotation","shape","generateShapes","ShapeBufferGeometry","side","DoubleSide","set","lines","_line$position","_line$rotation","Geometry","Line","frameId","requestAnimationFrame","animate","cancelAnimationFrame","controls","update","renderer","render","camera","mount","clientWidth","clientHeight","Scene","PerspectiveCamera","up","OrbitControls","WebGLRenderer","antialias","setClearColor","setSize","appendChild","domElement","prevProps","remove","dispose","removeChild","alignItems","display","backgroundColor","SlideItem","justifyContent","Legend","settings","dots","infinite","speed","slidesToShow","slidesToScroll","vertical","verticalSwiping","arrows","swipeToSlide","afterChange","changeStartingIndex","verticalAlign","slider","slickPrev","cursor","FontAwesomeIcon","icon","faAngleUp","Slider","assign","slickNext","faAngleDown","PreferenceSpace","updateContextHullVertices","convexHullVertices","vertext","vert","top","left","Visuals","Stats","prunedTrs","leftTrs","classNames","table-fixed","minWidth","Interaction","PhaseTwo","Result","pickRandom","n","arrCopy","floor","random","downloadFile","prevState","output","topSample","item","checkboxValues","top5","top5small","top5large","pointsScoreRanking","top5smallSample","top5largeSample","intro","inst","top10","top10small","top10large","top10smallSample","top10largeSample","text1","text2","text3","text4","headers","Content-Type","body","JSON","stringify","json","showEnd","th","pt","top1small","top1large","top1smallSample","top1largeSample","present","_event$target","topPresentwithbox","handleCheckboxChange","bind","margin","End","onRuntimeInitialized","_onRuntimeInitialized","_yield$loadDataset","_yield$loadDataset2","store","createStore","rootReducer","Provider","App","document","getElementById","script","src"],"mappings":"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","file":"static/js/main.277d3923.chunk.js","sourcesContent":["export const SET_ACTIVE_COMPONENT = \"SET_ACTIVE_COMPONENT\";\r\nexport const SET_CANDIDATES = \"SET_CANDIDATES\";\r\nexport const SET_DATASET = \"SET_DATASET\";\r\nexport const TOGGLE_MASK = \"TOGGLE_MASK\";\r\nexport const PRUNE_POINTS = \"PRUNE_POINTS\";\r\nexport const SET_LEFT_POINTS = \"SET_LEFT_POINTS\";\r\nexport const SET_MODE = \"SET_MODE\";\r\nexport const RESTART = \"RESTART\";\r\nexport const UPDATE_CONVEX_HULL = \"UPDATE_CONVEX_HULL\";\r\nexport const SET_SCORE = \"SET_SCORE\";\r\nexport const SET_NAME = \"SET_NAME\";\r\nexport const SET_EMAIL = \"SET_EMAIL\";\r\nexport const SET_INTERACTION_RESULT = \"SET_INTERACTION_RESULT\";\r\n\r\nexport const setInteractionResult = interactionResults => ({\r\n  type: SET_INTERACTION_RESULT,\r\n  interactionResults\r\n});\r\n\r\nexport const setUserName = name => ({\r\n  type: SET_NAME,\r\n  name\r\n});\r\n\r\nexport const setUserEmail = email => ({\r\n  type: SET_EMAIL,\r\n  email\r\n});\r\n\r\nexport const setActiveComponent = component => ({\r\n  type: SET_ACTIVE_COMPONENT,\r\n  component\r\n});\r\n\r\nexport const setCandidates = candidates => ({\r\n  type: SET_CANDIDATES,\r\n  candidates\r\n});\r\n\r\nexport const setDataset = (points, labels, attributes) => ({\r\n  type: SET_DATASET,\r\n  points,\r\n  labels,\r\n  attributes\r\n});\r\n\r\nexport const toggleMask = (attr, val) => ({\r\n  type: TOGGLE_MASK,\r\n  mask: { [attr]: val }\r\n});\r\n\r\nexport const prunePoints = (indices, step) => ({\r\n  type: PRUNE_POINTS,\r\n  indices,\r\n  step\r\n});\r\n\r\nexport const setLeftPoints = indices => ({\r\n  type: SET_LEFT_POINTS,\r\n  indices\r\n});\r\n\r\nexport const setScore = scores => ({\r\n  type: SET_SCORE,\r\n  scores\r\n})\r\n\r\nexport const changeMode = mode => ({\r\n  type: SET_MODE,\r\n  mode\r\n});\r\n\r\nexport const restart = () => ({\r\n  type: RESTART\r\n});\r\n\r\nexport const updateConvexHull = vertices => ({\r\n  type: UPDATE_CONVEX_HULL,\r\n  vertices\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport {\r\n  SET_ACTIVE_COMPONENT,\r\n  SET_DATASET,\r\n  SET_CANDIDATES,\r\n  TOGGLE_MASK,\r\n  SET_LEFT_POINTS,\r\n  PRUNE_POINTS,\r\n  SET_MODE,\r\n  RESTART,\r\n  UPDATE_CONVEX_HULL,\r\n  SET_SCORE,\r\n  SET_NAME,\r\n  SET_EMAIL,\r\n  SET_INTERACTION_RESULT\r\n} from \"../actions\";\r\n\r\nconst activeComponent = (state = \"Welcome\", action) => {\r\n  switch (action.type) {\r\n    case SET_ACTIVE_COMPONENT:\r\n      return action.component;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// all points in the dataset\r\nconst points = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_DATASET:\r\n      return action.points;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//the scores of all points in the dataset\r\nconst scores = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_SCORE:\r\n      return action.scores;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\n// the labels of points\r\nconst labels = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_DATASET:\r\n      return action.labels;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// the attribute names\r\nconst attributes = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_DATASET:\r\n      return action.attributes;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// the set of points in the specified ranges.\r\nconst candidates = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_CANDIDATES:\r\n      return action.candidates;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// show/hide attributes (this feature is not exposed in the UI)\r\nconst mask = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_DATASET:\r\n      const mask = {};\r\n      action.attributes.forEach(([attr, config]) => {\r\n        mask[attr] = 1;\r\n      });\r\n      return mask;\r\n    case TOGGLE_MASK:\r\n      return { ...state, ...action.mask };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// the set of points pruned.\r\n// it is an array of [idx, step no.]\r\nconst prunedPoints = (state = [], action) => {\r\n  switch (action.type) {\r\n    case RESTART:\r\n      return [];\r\n    case PRUNE_POINTS:\r\n      const points = action.indices.map(idx => [idx, action.step]);\r\n      return [...points, ...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// the set of candidate points\r\n// it is an array of indices\r\nconst leftPoints = (state = [], action) => {\r\n  switch (action.type) {\r\n    case RESTART:\r\n      return [];\r\n    case SET_LEFT_POINTS:\r\n      return action.indices;\r\n    case PRUNE_POINTS:\r\n      return state.filter(idx => action.indices.indexOf(idx) === -1);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// history of the number of left points\r\nconst numLeftPoints = (state = [], action) => {\r\n  switch (action.type) {\r\n    case SET_LEFT_POINTS:\r\n      return [action.indices.length];\r\n    case PRUNE_POINTS:\r\n      const prev = state[state.length - 1];\r\n      return [...state, prev - action.indices.length];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// the algorithm to select a pair of points.\r\nconst mode = (state = \"simplex\", action) => {\r\n  switch (action.type) {\r\n    case SET_MODE:\r\n      return action.mode;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// vertices of the convex hull of the preference space.\r\nconst vertices = (state = [], action) => {\r\n  switch (action.type) {\r\n    case UPDATE_CONVEX_HULL:\r\n      return action.vertices;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst userName = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_NAME:\r\n      return action.name;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst userEmail = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_EMAIL:\r\n      return action.email;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst interactionResults = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_INTERACTION_RESULT:\r\n      return action.interactionResults;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport default combineReducers({\r\n  activeComponent,\r\n  points,\r\n  labels,\r\n  attributes,\r\n  candidates,\r\n  mask,\r\n  prunedPoints,\r\n  leftPoints,\r\n  numLeftPoints,\r\n  mode,\r\n  vertices,\r\n  scores,\r\n  userName,\r\n  userEmail,\r\n  interactionResults\r\n});\r\n","// read points from a text file\nfunction parsePoints(text) {\n  const points = text\n    .trim()\n    .split(\"\\n\")\n    .slice(1) // the first line is <numOfPoints> <dimension>\n    .map(line =>\n      line\n        .trim()\n        .split(/\\s+/)\n        .map(str => parseFloat(str))\n    );\n  return points; //obtain a 2D array\n}\n\n// read labels from a text file\nfunction parseLabels(text) {\n  const labels = text.trim().split(\"\\n\");\n  return labels;\n}\n\n// check if val is in the range [low, high].\nfunction isInRange(val, low, high) {\n  return low <= val && val <= high;\n}\n\n// get the range of each attribute in a set of points.\nexport const getRanges = points => {\n  const ranges = points[0].map(x => ({ low: x, high: x }));\n  points.slice(1).forEach(point => {\n    point.forEach((x, i) => {\n      ranges[i].low = Math.min(ranges[i].low, x);\n      ranges[i].high = Math.max(ranges[i].high, x);\n    });\n  });\n  return ranges; //obtain an array of objects\n};\n\n// load a dataset by reading its points and labels.\nexport const loadDataset = async (pointsURL, labelsURL) => {\n  let response = await fetch(pointsURL);\n  const points = parsePoints(await response.text());\n  if (labelsURL === undefined) {\n    return points;\n  }\n  response = await fetch(labelsURL);\n  const labels = parseLabels(await response.text());\n  return [points, labels];\n};\n\n// get points that are in the specified ranges.\nexport const selectCandidates = (points, ranges, mask, maxPoints) => {\n  const candidates = [];\n  for (let i = 0; i < points.length; ++i) {\n    if (candidates.length >= maxPoints) break;\n    const point = points[i];\n    let isValid = true;\n    for (let j = 0; j < point.length; ++j) {\n      if (mask[j] && !isInRange(point[j], ranges[j][0], ranges[j][1])) {\n        isValid = false;\n        break;\n      }\n    }\n    if (isValid) candidates.push(point);\n  }\n  return candidates;\n};\n\n// convert a JS array to a C++ 2D vector\nexport const array2Vector2D = array => {\n  const vector = new window.Module.VecVecDouble();\n  array.forEach(arr => {\n    const vec = new window.Module.VectorDouble();\n    arr.forEach(x => vec.push_back(x));\n    vector.push_back(vec);\n    vec.delete();\n  });\n  return vector;\n};\n\n// convert a C++ 2D vector to a JS array\nexport const vector2Array2D = vector => {\n  const array = [];\n  for (let i = 0; i < vector.size(); ++i) {\n    const vec = vector.get(i);\n    const arr = [];\n    for (let j = 0; j < vec.size(); ++j) arr.push(vec.get(j));\n    array.push(arr);\n  }\n  return array;\n};\n\n// convert a C++ vector to a JS array\nexport const vector2Array = vector => {\n  const array = [];\n  for (let i = 0; i < vector.size(); ++i) {\n    array.push(vector.get(i));\n  }\n  return array;\n};\n\n// get the indices of points pruned.\n// both prevIndices and currIndices need to be sorted.\nexport const getPrunedIndices = (prevIndices, currIndices) => {\n  let prunedIndices = [];\n  for (let i = 0, j = 0; i < prevIndices.size() || j < currIndices.size(); ) {\n    if (j >= currIndices.size() || prevIndices.get(i) < currIndices.get(j)) {\n      prunedIndices.push(prevIndices.get(i));\n      ++i;\n    } else {\n      ++i;\n      ++j;\n    }\n  }\n  return prunedIndices;\n};\n","import React from \"react\";\r\nimport {\r\n  setActiveComponent,\r\n  setCandidates,\r\n  toggleMask,\r\n  changeMode,\r\n  setUserName,\r\n  setUserEmail\r\n} from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectCandidates } from \"../utils\";\r\n\r\n\r\n\r\n// the welcome scene containing a brief introduction and a table to obtain the user's input\r\nclass Welcome extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.inputs = {};\r\n    this.inputs.name = React.createRef();\r\n    this.inputs.email = React.createRef();\r\n  }\r\n\r\n  handleStart = () => {\r\n      const strName = this.inputs.name.current.value.trim();\r\n      const strEmail = this.inputs.email.current.value.trim();\r\n      if (strName === \"\")\r\n      {\r\n          alert(`Please input your name.`);\r\n          return;\r\n      }\r\n      else if (strEmail === \"\")\r\n      {\r\n          alert(`Please input your email address.`);\r\n          return;\r\n      }\r\n      this.props.start(strName, strEmail);\r\n  };\r\n\r\n  handleModeChange = event => {\r\n    this.props.changeMode(event.target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"text-center m-auto\" style={{ maxWidth: \"40rem\" }}>\r\n        <h1>Welcome to Our Research Project!</h1>\r\n        <br />\r\n        <br />\r\n          <tr key= \"name\">\r\n              <td className=\"align-middle\" style={{fontSize: \"30px\", textAlign: \"center\"}}>\r\n                  &nbsp;\r\n                  Please input your name:\r\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n              </td>\r\n              <td>\r\n                  <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Name\"\r\n                      ref={this.inputs.name}\r\n                      style={{width: '300px'}}\r\n                  />\r\n              </td>\r\n          </tr>\r\n          <br />\r\n          <tr key= \"email\">\r\n              <td className=\"align-middle\" style={{fontSize: \"30px\", textAlign: \"center\"}}>\r\n                  &nbsp;\r\n                  Please input your email address:\r\n                  &nbsp;\r\n              </td>\r\n              <td>\r\n                  <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Email\"\r\n                      ref={this.inputs.email}\r\n                      style={{width: '300px'}}\r\n                  />\r\n              </td>\r\n          </tr>\r\n        <br />\r\n        <br />\r\n        <p className=\"lead text-muted\">\r\n          Click the \"Continue\" button to continue. <br />\r\n        </p>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            style={{ width: \"8rem\" }}\r\n            onClick={this.handleStart}\r\n          >\r\n           Continue\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ attributes, mask, points, mode }) => ({\r\n  attributes,\r\n  mask,\r\n  points,\r\n  mode\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  start: (strName, strEmail) => {\r\n    dispatch(setUserName(strName));\r\n    dispatch(setUserEmail(strEmail));\r\n    dispatch(setActiveComponent(\"Declaration\"));\r\n  },\r\n  toggleMask: (attr, mask) => dispatch(toggleMask(attr, mask)),\r\n  changeMode: mode => dispatch(changeMode(mode))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Welcome);\r\n","import React from \"react\";\r\nimport {\r\n    setActiveComponent,\r\n    setCandidates,\r\n    toggleMask,\r\n    changeMode\r\n} from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectCandidates } from \"../utils\";\r\n\r\n\r\n\r\n// the welcome scene containing a brief introduction and a table to obtain the user's input\r\nclass Declaration extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleStart = () => {\r\n        this.props.start();\r\n    };\r\n\r\n    handleModeChange = event => {\r\n        this.props.changeMode(event.target.value);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"text-center m-auto\" style={{ maxWidth: \"40rem\" }}>\r\n                <h1>Declaration</h1>\r\n                <br />\r\n                <br />\r\n                <p className=\"lead text-left\">\r\n                    We are conducting a user study for a research project. All answers of the questions will be recorded for research purpose. The purpose is to explore critical factors for evaluating user preferences in the recommendation system.\r\n                    <br /><br />We want to assure you that any data collected during this study will remain strictly confidential. We will take all necessary steps to protect your personal information and ensure that it is not shared with any unauthorized individuals or organizations.\r\n                    <br /><br />We promise that we will not disclose any individual sensitive data that may be obtained through this study. However, we may disclose general statistics, such as the overall findings of the study, to third parties.\r\n                    <br /><br />Your participation in this survey is voluntary, and you have the right to decline to answer any question or to withdraw from the survey at any time without any penalty or negative consequences.\r\n                </p>\r\n                <br />\r\n                <p className=\"lead text-muted\">\r\n                    Click the \"Agree\" button to confirm that you have read and understood the above terms and conditions. <br />\r\n                </p>\r\n                <div>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        style={{ width: \"8rem\" }}\r\n                        onClick={this.handleStart}\r\n                    >\r\n                        Agree\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ attributes, mask, points, mode }) => ({\r\n    attributes,\r\n    mask,\r\n    points,\r\n    mode\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    start: () => {\r\n        dispatch(setActiveComponent(\"Introduction\"));\r\n    },\r\n    toggleMask: (attr, mask) => dispatch(toggleMask(attr, mask)),\r\n    changeMode: mode => dispatch(changeMode(mode))\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Declaration);\r\n","import React from \"react\";\r\nimport {\r\n  setActiveComponent,\r\n  setCandidates,\r\n  toggleMask,\r\n  changeMode\r\n} from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectCandidates } from \"../utils\";\r\n\r\n\r\n\r\n// the welcome scene containing a brief introduction and a table to obtain the user's input\r\nclass Introduction extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  handleStart = () => {\r\n    this.props.start();\r\n  };\r\n\r\n  handleModeChange = event => {\r\n    this.props.changeMode(event.target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"text-center m-auto\" style={{ maxWidth: \"40rem\" }}>\r\n        <h1>Instructions</h1>\r\n        <br />\r\n        <br />\r\n        <p className=\"lead text-left\" style={{fontSize: \"30px\"}}>\r\n          There are two phases: Interaction and Evaluation. <br />\r\n        </p>\r\n        <p className=\"lead text-left\">\r\n          Phase 1 (Interaction): In the Interaction phase, we want to ask you a few questions to learn\r\n          your preference and then find some cars that you will be interested in. <br /><br />\r\n          Phase 2 (Evaluation): In the Evaluation phase, we will present you some cars and ask you\r\n          whether you are interested in them.<br /><br />\r\n        </p>\r\n        <p className=\"lead text-muted\">\r\n          Click the \"Start\" button to start the research project. <br />\r\n        </p>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            style={{ width: \"8rem\" }}\r\n            onClick={this.handleStart}\r\n          >\r\n            Start\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ attributes, mask, points, mode }) => ({\r\n  attributes,\r\n  mask,\r\n  points,\r\n  mode\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    start: () => {\r\n        dispatch(setActiveComponent(\"PhaseOne\"));\r\n    },\r\n    toggleMask: (attr, mask) => dispatch(toggleMask(attr, mask)),\r\n    changeMode: mode => dispatch(changeMode(mode))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Introduction);\r\n","import React from \"react\";\r\nimport {\r\n    setActiveComponent,\r\n    setCandidates,\r\n    toggleMask,\r\n    changeMode\r\n} from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectCandidates } from \"../utils\";\r\n\r\n// the welcome scene containing a brief introduction and a table to obtain the user's input\r\nclass PhaseOne extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.inputs = {};\r\n        this.props.attributes.forEach(([attr, config]) => {\r\n            this.inputs[attr] = [React.createRef(), React.createRef()];\r\n        });\r\n        this.inputs.maxPoints = React.createRef();\r\n    }\r\n\r\n    handleStart = () => {\r\n        const ranges = [];\r\n        const mask = [];\r\n        for (let i = 0; i < this.props.attributes.length; ++i) {\r\n            const [attr, config] = this.props.attributes[i];\r\n            const range = [config.low, config.high];\r\n            ranges.push(range);\r\n            mask.push(this.props.mask[attr]);\r\n        }\r\n        let maxPoints = 1000;\r\n\r\n        const candidates = selectCandidates(\r\n            this.props.points,\r\n            ranges,\r\n            mask,\r\n            maxPoints\r\n        );\r\n        if (candidates.length === 0) {\r\n            alert(\"No matching cars, try larger ranges\");\r\n            return;\r\n        }\r\n        this.props.startAlgorithm(candidates);\r\n    };\r\n\r\n    handleModeChange = event => {\r\n        this.props.changeMode(event.target.value);\r\n    };\r\n\r\n    render() {\r\n        const trs = this.props.attributes.map(([attr, config]) => {\r\n            const disabled = this.props.mask[attr] === 0;\r\n            const { low, high } = config;\r\n            return (\r\n                <tr key={attr}>\r\n                    <td className=\"align-middle\">{attr}</td>\r\n                    <td>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder={low}\r\n                            ref={this.inputs[attr][0]}\r\n                            disabled={disabled}\r\n                        />\r\n                    </td>\r\n                    <td>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder={high}\r\n                            ref={this.inputs[attr][1]}\r\n                            disabled={disabled}\r\n                        />\r\n                    </td>\r\n                    <td className=\"align-middle hidden\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            checked={disabled}\r\n                            onChange={() =>\r\n                                this.props.toggleMask(attr, 1 - this.props.mask[attr])\r\n                            }\r\n                        />\r\n                    </td>\r\n                </tr>\r\n            );\r\n        });\r\n        trs.push(\r\n            <tr key=\"other\">\r\n                <td className=\"align-middle font-weight-bold\">Max No. of Cars</td>\r\n                <td>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"1000\"\r\n                        ref={this.inputs.maxPoints}\r\n                    />\r\n                </td>\r\n                <td>\r\n                    <div className=\"col form-inline align-items-center\">\r\n                        <label className=\"mr-4 col-form-label font-weight-bold\">Mode</label>\r\n                        <div className=\"mr-3 form-check form-check-inline\">\r\n                            <input\r\n                                className=\"form-check-input\"\r\n                                type=\"radio\"\r\n                                name=\"inlineRadioOptions\"\r\n                                id=\"simplex\"\r\n                                value=\"simplex\"\r\n                                checked={this.props.mode === \"simplex\"}\r\n                                onChange={this.handleModeChange}\r\n                            />\r\n                            <label className=\"form-check-label\" htmlFor=\"simplex\">\r\n                                Simplex\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input\r\n                                className=\"form-check-input\"\r\n                                type=\"radio\"\r\n                                name=\"inlineRadioOptions\"\r\n                                id=\"random\"\r\n                                value=\"random\"\r\n                                checked={this.props.mode === \"random\"}\r\n                                onChange={this.handleModeChange}\r\n                            />\r\n                            <label className=\"form-check-label\" htmlFor=\"random\">\r\n                                Random\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n                <td />\r\n            </tr>\r\n        );\r\n        return (\r\n            <div className=\"text-center m-auto\" style={{ maxWidth: \"40rem\" }}>\r\n                <h1>Phase One: Interaction</h1>\r\n                <br />\r\n                <br />\r\n                <h4 >\r\n                    You are now in phase one Interaction. You will be asked with multiple questions to find your favorite cars. <br />\r\n                </h4>\r\n                <br />\r\n                <p className=\"lead text-muted\">\r\n                    Click the \"Continue\" button to continue. <br />\r\n                </p>\r\n                <div>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        style={{ width: \"8rem\" }}\r\n                        onClick={this.handleStart}\r\n                    >\r\n                        Continue\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ attributes, mask, points, mode }) => ({\r\n    attributes,\r\n    mask,\r\n    points,\r\n    mode\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    startAlgorithm: candidates => {\r\n        dispatch(setCandidates(candidates));\r\n        dispatch(setActiveComponent(\"Interaction\"));\r\n    },\r\n    toggleMask: (attr, mask) => dispatch(toggleMask(attr, mask)),\r\n    changeMode: mode => dispatch(changeMode(mode))\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(PhaseOne);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setActiveComponent,\r\n  setInteractionResult,\r\n  setLeftPoints,\r\n  setScore,\r\n  prunePoints,\r\n  updateConvexHull\r\n} from \"../actions\";\r\nimport {\r\n  array2Vector2D,\r\n  vector2Array,\r\n  getPrunedIndices,\r\n  vector2Array2D\r\n} from \"../utils\";\r\n\r\nconst SIMPLEX = 2;\r\nconst RANDOM = 1;\r\n\r\n// iteratively ask the user to choose the preferred car from a pair of cars.\r\nclass Question extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const smallerBetter = new window.Module.VectorInt();\r\n    this.attributes = [];\r\n    this.props.attributes.forEach(([attr, config]) => {\r\n      if (this.props.mask[attr]) {\r\n        smallerBetter.push_back(config.smallerBetter ? 1 : 0);\r\n        this.attributes.push(attr);\r\n      }\r\n    });\r\n    const candidatesVec = array2Vector2D(this.props.candidates);\r\n    this.runner = new window.Module.AlgorithmRunner(\r\n      candidatesVec,\r\n      smallerBetter,\r\n      this.props.mode === \"random\" ? RANDOM : SIMPLEX\r\n    );\r\n    candidatesVec.delete();\r\n    const indices = this.runner.nextPair();\r\n    this.state = {\r\n        pair: vector2Array(indices),\r\n        interRR: []\r\n    };\r\n  }\r\n\r\n  choose = idx => {\r\n    const option = idx + 1;\r\n    //record the interaction result\r\n    const trs = this.state.pair.map((idx, i) => {\r\n      let tds = \"\\n\";\r\n      this.props.candidates[idx].forEach((x, j) => {\r\n        tds += x.toString();\r\n        tds += \"  \";\r\n      });\r\n      return tds;\r\n    });\r\n    trs.push(\"\\n\");\r\n    trs.push(option);\r\n    trs.push(\"\\n\");\r\n    console.log(trs);\r\n    this.state.interRR.push(trs);\r\n\r\n    const accurracy = this.runner.choose(option);\r\n    if (accurracy > 0.99999)\r\n    {\r\n      this.stopInteraction();\r\n    }\r\n    else {\r\n      const indices = this.runner.nextPair();\r\n      this.setState({\r\n        pair: vector2Array(indices)\r\n      });\r\n    }\r\n  };\r\n\r\n  stopInteraction = () => {\r\n    //this.prevIndices.delete();\r\n    const Indicess = this.runner.getRanking();\r\n    this.props.setLeftPoints(vector2Array(Indicess));\r\n    const Scores = this.runner.getScore();\r\n    this.props.setScore(vector2Array(Scores));\r\n    this.runner.delete();\r\n    this.props.showResult(this.state.interRR);\r\n};\r\n\r\nrender() {\r\nconst ths = [<th key=\"Option No.\">Option</th>];\r\nthis.attributes.forEach(attr => {\r\n  ths.push(<th key={attr}>{attr}</th>);\r\n});\r\nths.push(<th key=\"chooseButton\" />);\r\n\r\nconst trs = this.state.pair.map((idx, i) => {\r\n  const tds = [<td key=\"Option No.\">{i + 1}</td>];\r\n  this.props.candidates[idx].forEach((x, j) => {\r\n    tds.push(<td key={j}>{x}</td>);\r\n  });\r\n  tds.push(\r\n    <td key=\"chooseButton\">\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-outline-success btn-sm\"\r\n        onClick={() => this.choose(i)}\r\n      >\r\n        Choose\r\n      </button>\r\n    </td>\r\n  );\r\n  return (\r\n    <tr key={i} data-toggle=\"tooltip\" title={this.props.labels[idx]}>\r\n      {tds}\r\n    </tr>\r\n  );\r\n});\r\n\r\nreturn (\r\n  <div>\r\n    <h3>Phase One: Interaction  </h3>\r\n    <br/><br/>\r\n    <h4>\r\n      Q{this.runner.getNumQuestion()}: Choose the Car you favor more\r\n      between the following options\r\n    </h4>\r\n    <div className=\"row justify-content-center align-items-center\">\r\n      <div className=\"col-md-8\">\r\n        <table className=\"table table-hover text-center\">\r\n          <thead>\r\n            <tr>{ths}</tr>\r\n          </thead>\r\n          <tbody>{trs}</tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n}\r\n}\r\n\r\nconst mapStateToProps = ({ labels, candidates, mask, attributes, numLeftPoints, mode, scores }) => ({\r\n    labels,\r\n    candidates,\r\n    mask,\r\n    attributes,\r\n    numLeftPoints,\r\n    mode,\r\n    scores\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  showResult: (interResults) => {\r\n    dispatch(setInteractionResult(interResults));\r\n    dispatch(setActiveComponent(\"PhaseTwo\"));\r\n  },\r\n  setLeftPoints: indices => { dispatch(setLeftPoints(indices));},\r\n  setScore: scores => { dispatch(setScore(scores));},\r\n  prunePoints: (indices, step) => { dispatch(prunePoints(indices, step));},\r\n  updateConvexHull: vertices => {dispatch(updateConvexHull(vertices)); }\r\n});\r\n\r\nexport default connect(\r\nmapStateToProps,\r\nmapDispatchToProps\r\n)(Question);\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  FlexibleXYPlot,\n  XAxis,\n  YAxis,\n  Hint,\n  VerticalBarSeries,\n  ChartLabel\n} from \"react-vis\";\n\n// a histogram to show the number of cars left vs the number of questions asked.\nclass Histogram extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hintValue: null\n    };\n  }\n\n  _onMouseLeave = () => {\n    this.setState({\n      hintValue: null\n    });\n  };\n\n  _onNearestX = (value, { index }) => {\n    this.setState({\n      hintValue: this.props.data[index]\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <h4>No. of Cars Left vs. No. of Questions Asked</h4>\n        <div style={{ width: \"25rem\", height: \"25rem\" }}>\n          <FlexibleXYPlot onMouseLeave={this._onMouseLeave}>\n            <XAxis\n              tickValues={this.props.data.map((val, idx) => idx)}\n              tickFormat={value => value.toString()}\n              style={{\n                ticks: { fill: \"black\" }\n              }}\n            />\n            <YAxis\n              style={{\n                ticks: { fill: \"black\" }\n              }}\n            />\n            <ChartLabel\n              text=\"Question No.\"\n              includeMargin={false}\n              xPercent={0.82}\n              yPercent={1.06}\n              style={{\n                style: { fill: \"black\" }\n              }}\n            />\n            <ChartLabel\n              text=\"No. of Cars Left\"\n              includeMargin={false}\n              xPercent={-0.01}\n              yPercent={0.05}\n              style={{\n                transform: \"rotate(-90)\",\n                textAnchor: \"end\",\n                style: { fill: \"black\" }\n              }}\n            />\n            <VerticalBarSeries\n              color=\"rgb(0, 123, 255)\"\n              onNearestX={this._onNearestX}\n              data={this.props.data}\n              animation\n            />\n            {this.state.hintValue && (\n              <Hint value={this.state.hintValue}>\n                <p style={{ color: \"black\" }}>\n                  Q{this.state.hintValue.x}: {this.state.hintValue.y} Cars Left\n                </p>\n              </Hint>\n            )}\n          </FlexibleXYPlot>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ numLeftPoints }) => ({\n  data: numLeftPoints.map((num, i) => ({ x: i, y: num }))\n});\n\nexport default connect(mapStateToProps)(Histogram);\n","import * as THREE from \"three\";\nwindow.THREE = THREE;\nrequire(\"three/examples/js/controls/OrbitControls\");\nrequire(\"three/examples/js/QuickHull\");\nrequire(\"three/examples/js/geometries/ConvexGeometry\");\n\nexport default THREE;\n","import React from \"react\";\nimport THREE from \"./three\";\n\nconst SCALE = 100;\nconst FACTOR = 10; // font size = SCALE / FACTOR\n\n// the convex hull of the preference space\nclass ConvexHull extends React.Component {\n  componentDidMount() {\n    const width = this.mount.clientWidth;\n    const height = this.mount.clientHeight;\n\n    this.scene = new THREE.Scene();\n\n    this.camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    this.camera.position.set(1.5 * SCALE, 1.5 * SCALE, 0.5 * SCALE);\n    this.camera.up.set(0, 0, 1);\n    this.controls = new THREE.OrbitControls(this.camera, this.mount);\n    this.controls.update();\n\n    this.renderer = new THREE.WebGLRenderer({ antialias: true });\n    this.renderer.setClearColor(0xffffff);\n    this.renderer.setSize(width, height);\n    this.mount.appendChild(this.renderer.domElement);\n    this.addAxes();\n    this.drawGeometry();\n    this.start();\n  }\n\n  drawGeometry = () => {\n    if (this.props.vertices.length < 4) return;\n    const points = this.props.vertices.map(vertex => {\n      const scaled_vertex = vertex.map(x => x * SCALE);\n      return new THREE.Vector3(...scaled_vertex);\n    });\n    const geometry = new THREE.ConvexGeometry(points);\n    const material = new THREE.MeshBasicMaterial({\n      color: 0xff0000,\n      //shading: THREE.FlatShading,\n      polygonOffset: true,\n      polygonOffsetFactor: 1, // positive value pushes polygon further away\n      polygonOffsetUnits: 1,\n      opacity: 0.5,\n      transparent: true\n    });\n    this.mesh = new THREE.Mesh(geometry, material);\n    const geo = new THREE.EdgesGeometry(geometry); // or WireframeGeometry\n    const mat = new THREE.LineBasicMaterial({ color: 0x000000, linewidth: 2 });\n    const wireframe = new THREE.LineSegments(geo, mat);\n    this.mesh.add(wireframe);\n    this.scene.add(this.mesh);\n  };\n\n  addAxes = () => {\n    const axes = new THREE.AxesHelper(1.5 * SCALE);\n    this.scene.add(axes);\n    const typeface = require(\"three/examples/fonts/helvetiker_regular.typeface.json\");\n    const font = new THREE.Font(typeface);\n\n    const numConfig = [\n      // color, position, rotation\n      [\n        0xff0000,\n        [SCALE + SCALE / (FACTOR * 2), 0, 0],\n        [Math.PI / 2, Math.PI, 0]\n      ],\n      [\n        0x00ff00,\n        [0, SCALE - SCALE / (FACTOR * 2), 0],\n        [Math.PI / 2, Math.PI / 2, 0]\n      ],\n      [\n        0x0000ff,\n        [\n          SCALE / (FACTOR * Math.sqrt(2)),\n          -SCALE / (FACTOR * Math.sqrt(2)),\n          SCALE\n        ],\n        [Math.PI / 2, (Math.PI * 3) / 4, 0]\n      ]\n    ];\n\n    numConfig.forEach(([color, position, rotation]) => {\n      const shape = font.generateShapes(\"1\", SCALE / FACTOR);\n      const geometry = new THREE.ShapeBufferGeometry(shape);\n      const mesh = new THREE.Mesh(\n        geometry,\n        new THREE.MeshBasicMaterial({\n          color: color,\n          side: THREE.DoubleSide\n        })\n      );\n      mesh.position.set(...position);\n      mesh.rotation.set(...rotation);\n      this.scene.add(mesh);\n    });\n    window.lines = [];\n    const lineConfig = [\n      [0xff0000, [SCALE, 0, 0], [0, 0, 0]],\n      [0x00ff00, [0, SCALE, 0], [0, 0, -Math.PI / 2]],\n      [0x0000ff, [0, 0, SCALE], [0, 0, -Math.PI / 2]]\n    ];\n    lineConfig.forEach(([color, position, rotation]) => {\n      const material = new THREE.LineBasicMaterial({\n        color\n      });\n      const geometry = new THREE.Geometry();\n      geometry.vertices.push(\n        new THREE.Vector3(0, 0, 0),\n        new THREE.Vector3(0, SCALE / (2 * FACTOR))\n      );\n      const line = new THREE.Line(geometry, material);\n      line.position.set(...position);\n      line.rotation.set(...rotation);\n      this.scene.add(line);\n      window.lines.push(line);\n    });\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.vertices !== prevProps.vertices) {\n      if (this.mesh) {\n        this.scene.remove(this.mesh);\n        this.mesh.geometry.dispose();\n        this.mesh.material.dispose();\n      }\n      this.drawGeometry();\n    }\n  }\n\n  componentWillUnmount() {\n    this.stop();\n    this.mount.removeChild(this.renderer.domElement);\n  }\n\n  start = () => {\n    if (!this.frameId) {\n      this.frameId = window.requestAnimationFrame(this.animate);\n    }\n  };\n\n  stop = () => {\n    window.cancelAnimationFrame(this.frameId);\n  };\n\n  animate = () => {\n    this.controls.update();\n    this.renderer.render(this.scene, this.camera);\n    this.frameId = window.requestAnimationFrame(this.animate);\n  };\n\n  render() {\n    return (\n      <div\n        style={{ width: \"25rem\", height: \"25rem\" }}\n        ref={mount => {\n          this.mount = mount;\n        }}\n      />\n    );\n  }\n}\n\nexport default ConvexHull;\n","import React from \"react\";\nimport Slider from \"react-slick\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleUp, faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Line({ color }) {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"2rem\",\n        alignItems: \"center\",\n        display: \"flex\"\n      }}\n    >\n      <div style={{ width: \"100%\", height: \"2px\", backgroundColor: color }} />\n    </div>\n  );\n}\n\nfunction SlideItem({ text }) {\n  return (\n    <div\n      style={{\n        height: \"2rem\",\n        alignItems: \"center\",\n        display: \"flex\",\n        justifyContent: \"center\"\n      }}\n    >\n      {text}\n    </div>\n  );\n}\n\n// show/change the selected attributes for displaying the convex hull\nclass Legend extends React.Component {\n  render() {\n    const settings = {\n      dots: false,\n      infinite: true,\n      speed: 500,\n      slidesToShow: 3,\n      slidesToScroll: 1,\n      vertical: true,\n      verticalSwiping: true,\n      arrows: false,\n      swipeToSlide: true,\n      afterChange: this.props.changeStartingIndex\n    };\n    return (\n      <div\n        title=\"Click the arrows to change the selected attributes for displaying the convex hull.\"\n        style={{\n          width: \"12rem\"\n        }}\n      >\n        <div\n          style={{\n            alignItems: \"center\",\n            width: \"4rem\",\n            display: \"inline-block\",\n            verticalAlign: \"middle\"\n          }}\n        >\n          <Line color=\"#ff0000\" />\n          <Line color=\"#00ff00\" />\n          <Line color=\"#0000ff\" />\n        </div>\n        <div\n          style={{\n            width: \"8rem\",\n            display: \"inline-block\",\n            verticalAlign: \"middle\"\n          }}\n        >\n          <div\n            onClick={() => this.slider.slickPrev()}\n            style={{ cursor: \"pointer\" }}\n          >\n            <FontAwesomeIcon icon={faAngleUp} />\n          </div>\n          <Slider {...settings} ref={self => (this.slider = self)}>\n            <SlideItem text=\"Price (USD)\" />\n            <SlideItem text=\"Year\" />\n            <SlideItem text=\"Power (HP)\" />\n            <SlideItem text=\"Used KM\" />\n          </Slider>\n          <div\n            onClick={() => this.slider.slickNext()}\n            style={{ cursor: \"pointer\" }}\n          >\n            <FontAwesomeIcon icon={faAngleDown} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Legend;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport ConvexHull from \"./ConvexHull\";\nimport Legend from \"./Legend\";\n\n// to visualize the preference space.\nclass PreferenceSpace extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      index: 0,\n      convexHullVertices: props.vertices.map(vert => vert.slice(0, 3))\n    };\n  }\n\n  updateContextHullVertices = index => {\n    const convexHullVertices = this.props.vertices.map(vertext => {\n      const vert = [];\n      for (let i = 0; i < 3; ++i) {\n        vert.push(vertext[(i + index) % 4]);\n      }\n      return vert;\n    });\n    this.setState({ convexHullVertices });\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.vertices !== prevProps.vertices) {\n      this.updateContextHullVertices(this.state.index);\n    }\n  }\n\n  changeStartingIndex = index => {\n    this.setState({ index });\n    // explicitly pass index to this.updateContextHullVertices\n    // because this.state.index is not updated immediately,\n    // i.e., this.state.index has still the old value at this line.\n    this.updateContextHullVertices(index);\n  };\n\n  render() {\n    return (\n      <div>\n        <h4>Convex Hull of Preference Space</h4>\n        <ConvexHull vertices={this.state.convexHullVertices} />\n        <div style={{ position: \"absolute\", top: \"2rem\", left: \"20rem\" }}>\n          <Legend changeStartingIndex={this.changeStartingIndex} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ vertices }) => ({ vertices });\n\nexport default connect(mapStateToProps)(PreferenceSpace);\n","import React from \"react\";\nimport Histogram from \"./Histogram\";\nimport PreferenceSpace from \"./PreferenceSpace\";\n\nfunction Visuals() {\n  return (\n    <div>\n      <h2>Visuals</h2>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-6\" style={{ minWidth: \"500px\" }}>\n          <Histogram />\n        </div>\n        <div className=\"col-6\" style={{ minWidth: \"500px\" }}>\n          <PreferenceSpace />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Visuals;\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classNames from \"classnames\";\r\n\r\n// statistics including the number of cars pruned/left.\r\nclass Stats extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.attributes = [];\r\n    this.props.attributes.forEach(([attr, config]) => {\r\n      if (this.props.mask[attr]) {\r\n        this.attributes.push(attr);\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let ths = [<th key=\"Step No.\">Step</th>];\r\n    this.attributes.forEach(attr => {\r\n      ths.push(<th key={attr}>{attr}</th>);\r\n    });\r\n    const prunedTrs = this.props.prunedPoints.map(([idx, step], i) => (\r\n      <tr key={i} data-toggle=\"tooltip\" title={this.props.labels[idx]}>\r\n        {[step, ...this.props.candidates[idx]].map((x, j) => (\r\n          <td key={j}>{x}</td>\r\n        ))}\r\n      </tr>\r\n    ));\r\n    const leftTrs = this.props.leftPoints.map((idx, i) => (\r\n      <tr key={i} data-toggle=\"tooltip\" title={this.props.labels[idx]}>\r\n        {this.props.candidates[idx].map((x, j) => (\r\n          <td key={j}>{x}</td>\r\n        ))}\r\n      </tr>\r\n    ));\r\n    return (\r\n      <div>\r\n        <h2>Statistics</h2>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <h4>The No. of Cars Pruned: {this.props.prunedPoints.length}</h4>\r\n            <table\r\n              className={classNames(\"table\", \"table-hover\", {\r\n                \"table-fixed\": prunedTrs.length > 7\r\n              })}\r\n              style={{\r\n                minWidth: \"37rem\"\r\n              }}\r\n            >\r\n              <thead>\r\n                <tr>{ths}</tr>\r\n              </thead>\r\n              <tbody>{prunedTrs}</tbody>\r\n            </table>\r\n          </div>\r\n          <div className=\"col\">\r\n            <h4>\r\n              The No. of Cars Left in the Database:{\" \"}\r\n              {this.props.leftPoints.length}\r\n            </h4>\r\n            <table\r\n              className={classNames(\"table\", \"table-hover\", {\r\n                \"table-fixed\": leftTrs.length > 7\r\n              })}\r\n              style={{\r\n                minWidth: \"30rem\"\r\n              }}\r\n            >\r\n              <thead>\r\n                <tr>{ths.slice(1)}</tr>\r\n              </thead>\r\n              <tbody>{leftTrs}</tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToPropsStats = ({\r\n  labels,\r\n  candidates,\r\n  prunedPoints,\r\n  leftPoints,\r\n  attributes,\r\n  mask\r\n}) => ({\r\n  labels,\r\n  candidates,\r\n  prunedPoints,\r\n  leftPoints,\r\n  attributes,\r\n  mask\r\n});\r\n\r\nexport default connect(mapStateToPropsStats)(Stats);\r\n","import React from \"react\";\nimport Question from \"./Question\";\nimport Visuals from \"./Visuals\";\nimport Stats from \"./Stats\";\n\nfunction Interaction() {\n  return (\n    <div>\n      <Question />\n    </div>\n  );\n}\n\nexport default Interaction;\n","import React from \"react\";\r\nimport {\r\n    setActiveComponent,\r\n    setCandidates,\r\n    toggleMask,\r\n    changeMode\r\n} from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectCandidates } from \"../utils\";\r\n\r\n\r\n\r\n// the welcome scene containing a brief introduction and a table to obtain the user's input\r\nclass PhaseTwo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.inputs = {};\r\n        this.inputs.name = React.createRef();\r\n        this.inputs.email = React.createRef();\r\n    }\r\n\r\n    handleStart = () => {\r\n        this.props.start();\r\n    };\r\n\r\n    handleModeChange = event => {\r\n        this.props.changeMode(event.target.value);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"text-center m-auto\" style={{ maxWidth: \"40rem\" }}>\r\n                <h1>Phase Two: Evaluation</h1>\r\n                <br />\r\n                <br />\r\n                <h4 >\r\n                    You just ended phase one. We are now going to phase two Evaluation. We will present you some cars and ask you\r\n                    whether you are interested in them. <br />\r\n                </h4>\r\n                <br />\r\n                <p className=\"lead text-muted\">\r\n                    Click the \"Continue\" button to continue. <br />\r\n                </p>\r\n                <div>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        style={{ width: \"8rem\" }}\r\n                        onClick={this.handleStart}\r\n                    >\r\n                        Continue\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ attributes, mask, points, mode }) => ({\r\n    attributes,\r\n    mask,\r\n    points,\r\n    mode\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    start: () => {\r\n        dispatch(setActiveComponent(\"Result\"));\r\n    },\r\n    toggleMask: (attr, mask) => dispatch(toggleMask(attr, mask)),\r\n    changeMode: mode => dispatch(changeMode(mode))\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(PhaseTwo);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classNames from \"classnames\";\r\nimport { setActiveComponent, restart } from \"../actions\";\r\nimport Histogram from \"./Histogram\";\r\n\r\nclass Result extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.ths = [];\r\n    this.props.attributes.forEach(([attr, config]) => {\r\n      if (this.props.mask[attr]) {\r\n        const th = <th key={attr}>{attr}</th>;\r\n        this.ths.push(th);\r\n      }\r\n    });\r\n    this.ths.push(<th key=\"chooseCheckbox\"/>);\r\n\r\n    //ranked points withpoints and ranking\r\n    this.pointsScoreRanking = [];\r\n    for(let i = 0; i < this.props.leftPoints.length; ++i)\r\n    {\r\n      let pt = [], index = this.props.leftPoints[i];\r\n      for(let j = 0; j < this.props.candidates[index].length; ++j)\r\n        pt.push(this.props.candidates[index][j]);\r\n      pt.push(this.props.scores[i]);\r\n      pt.push(i+1);\r\n      this.pointsScoreRanking.push(pt);\r\n    }\r\n\r\n    //ranked points in html\r\n    this.trs = this.props.leftPoints.map((idx, i) => (\r\n        <tr key={i} data-toggle=\"tooltip\" title={this.props.labels[idx]}>\r\n          {this.props.candidates[idx].map((x, j) => (\r\n              <td key={j}>{x}</td>\r\n          ))}\r\n          <td key=\"chooseCheckbox\"/>\r\n        </tr>\r\n    ));\r\n\r\n    //points for presenting\r\n    const top = [this.trs[0]];\r\n    const top1small = [], top1large = [];\r\n    for (let i = 1; i < this.props.leftPoints.length; ++i)\r\n    {\r\n      if ((this.props.scores[0] - this.props.scores[i]) / this.props.scores[0] < 0.1)\r\n        top1small.push(this.pointsScoreRanking[i]);\r\n      else\r\n        top1large.push(this.pointsScoreRanking[i]);\r\n    }\r\n    const top1smallSample = this.pickRandom(top1small, 5);\r\n    const top1largeSample = this.pickRandom(top1large, 5);\r\n    for (let i = 0; i < top1largeSample.length; ++i)\r\n      top1smallSample.push(top1largeSample[i]);\r\n\r\n    const present = [];\r\n    for(let i = 0; i < this.props.leftPoints.length; ++i)\r\n    {\r\n      present.push(this.pointsScoreRanking[i].map((x, j) => { return (x); }));\r\n      present.push(\"\\n\");\r\n    }\r\n\r\n    let checkboxValues = {};\r\n    for (let i = 0; i < 10; i++) {\r\n      checkboxValues[`myCheckbox${i}`] = false;\r\n    }\r\n\r\n    this.state = {\r\n      intro: \"Here is your favorite car.\",\r\n      inst: \"Please compare your favorite car shown above and the following cars, \\n and indicate if you are interested in the following cars? (Note: You could select 0, one, more than one cars in the following list.)\",\r\n      ths: this.ths,\r\n      top: top,\r\n      topSample: top1smallSample,\r\n      output: present,\r\n      checkboxValues: checkboxValues\r\n    };\r\n\r\n\r\n  }\r\n\r\n  pickRandom = (arr, n) => {\r\n    const arrCopy = [...arr];\r\n    if (arrCopy.length <= n)\r\n      return arrCopy;\r\n    // Shuffle array\r\n    for (let i = arrCopy.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [arrCopy[i], arrCopy[j]] = [arrCopy[j], arrCopy[i]]; // ES6 array element swap\r\n    }\r\n    return arrCopy.slice(0, n);\r\n  };\r\n\r\n  handleCheckboxChange(event) {\r\n    const { id, checked } = event.target;\r\n    this.setState(prevState => ({\r\n      checkboxValues: {\r\n        ...prevState.checkboxValues,\r\n        [id]: checked\r\n      }\r\n    }));\r\n    console.log(this.state.checkboxValues);\r\n  }\r\n\r\n  downloadFile = index => {\r\n    if (index === 1) {\r\n      //output\r\n      this.setState(prevState => ({\r\n        output: [\r\n          ...prevState.output,\r\n          \"\\n\\n\\n\\nTOP-1\\n\\n\",\r\n          ...this.state.topSample.map((item, i) => [\r\n            item.map(x => x),\r\n            prevState.checkboxValues[`myCheckbox${i}`],\r\n            \"\\n\",\r\n          ]),\r\n        ]\r\n      }), () => {\r\n        console.log(this.state.checkboxValues); // Now this will log the updated state\r\n      });\r\n\r\n      let checkboxValues = {};\r\n      for (let i = 0; i < 10; i++) {\r\n        checkboxValues[`myCheckbox${i}`] = false;\r\n      }\r\n      this.setState({\r\n        checkboxValues: checkboxValues\r\n      });\r\n\r\n      //top-5 points\r\n      const top5 = [];\r\n      for(let i = 0; i < 5; ++i)\r\n        top5.push(this.trs[i]);\r\n      //obtain the index\r\n      const top5small = [], top5large = [];\r\n      for (let i = 5; i < this.props.leftPoints.length; ++i) {\r\n        if ((this.props.scores[4] - this.props.scores[i]) / this.props.scores[4] < 0.1)\r\n          top5small.push(this.pointsScoreRanking[i]);\r\n        else\r\n          top5large.push(this.pointsScoreRanking[i]);\r\n      }\r\n      const top5smallSample = this.pickRandom(top5small, 5);\r\n      const top5largeSample = this.pickRandom(top5large, 5);\r\n      for (let i = 0; i < top5largeSample.length; ++i)\r\n        top5smallSample.push(top5largeSample[i]);\r\n      this.setState({\r\n        intro: \"Here are your top-5 favorite cars.\",\r\n        inst: \"Please compare your favorite top-5 cars shown above and the following cars, \\n and indicate if you are interested in the following cars? (Note: You could select 0, one, more than one cars in the following list.)\",\r\n        top: top5,\r\n        topSample: top5smallSample\r\n      });\r\n    }\r\n    else if(index === 5) {\r\n      //output\r\n      this.state.output.push(\"\\n\\n\\n\\nTOP-5\\n\\n\");\r\n      for(let i = 0; i < this.state.topSample.length; ++i)\r\n      {\r\n        this.state.output.push(this.state.topSample[i].map(x => { return (x); }));\r\n        this.state.output.push(this.state.checkboxValues[`myCheckbox${i}`]); //preferred default\r\n        this.state.output.push(\"\\n\");\r\n      }\r\n      let checkboxValues = {};\r\n      for (let i = 0; i < 10; i++) {\r\n        checkboxValues[`myCheckbox${i}`] = false;\r\n      }\r\n      this.setState({\r\n        checkboxValues: checkboxValues\r\n      });\r\n\r\n      //top-10 points\r\n      const top10 = [];\r\n      for (let i = 0; i < 10; ++i)\r\n        top10.push(this.trs[i]);\r\n      //obtain the index\r\n      const top10small = [], top10large = [];\r\n      for (let i = 10; i < this.props.leftPoints.length; ++i)\r\n      {\r\n        if ((this.props.scores[9] - this.props.scores[i]) / this.props.scores[9] < 0.1)\r\n          top10small.push(this.pointsScoreRanking[i]);\r\n        else\r\n          top10large.push(this.pointsScoreRanking[i]);\r\n      }\r\n      const top10smallSample = this.pickRandom(top10small, 5);\r\n      const top10largeSample = this.pickRandom(top10large, 5);\r\n      for (let i = 0; i < top10largeSample.length; ++i)\r\n        top10smallSample.push(top10largeSample[i]);\r\n      this.setState({\r\n        intro: \"Here are your top-10 favorite cars.\",\r\n        inst: \"Please compare your favorite top-10 cars shown above and the following cars, \\n and indicate if you are interested in the following cars? (Note: You could select 0, one, more than one cars in the following list.)\",\r\n        top: top10,\r\n        topSample: top10smallSample\r\n      });\r\n    }\r\n    else\r\n    {\r\n      //output\r\n      this.state.output.push(\"\\n\\n\\n\\nTOP-10\\n\\n\");\r\n      for(let i = 0; i < this.state.topSample.length; ++i)\r\n      {\r\n        this.state.output.push(this.state.topSample[i].map(x => { return (x); }));\r\n        this.state.output.push(this.state.checkboxValues[`myCheckbox${i}`]); //preferred default\r\n        this.state.output.push(\"\\n\");\r\n      }\r\n      //let blob = new Blob([this.state.output], {type: 'text/plain'});\r\n      //let url = URL.createObjectURL(blob);\r\n      //let downloadLink = document.createElement('a');\r\n      //downloadLink.href = url;\r\n      //downloadLink.download = 'sample.txt'; // 指定下载文件及类型\r\n      //document.body.appendChild(downloadLink);\r\n      //downloadLink.click();\r\n      //document.body.removeChild(downloadLink);\r\n      \r\n      let data = {\r\n        text1: this.props.userName,\r\n        text2: this.props.userEmail,\r\n        text3: this.props.interactionResults,\r\n        text4: this.state.output\r\n      };\r\n\r\n      fetch('http://121.43.49.206:3000/save-text', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n      })\r\n          .then(response => response.json())\r\n          .then(data => console.log(data))\r\n          .catch((error) => console.error('Error:', error));\r\n      this.props.showEnd();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const topPresentwithbox = this.state.topSample.map((idx, i) => (\r\n        <tr key={i} data-toggle=\"tooltip\" title={this.props.labels[idx]}>\r\n          <td key={0}>{idx[0]}</td>\r\n          <td key={1}>{idx[1]}</td>\r\n          <td key={2}>{idx[2]}</td>\r\n          <td key={3}>{idx[3]}</td>\r\n          <td>\r\n            <input\r\n                type=\"checkbox\"\r\n                id={`myCheckbox${i}`}\r\n                name={`myCheckbox${i}`}\r\n                onChange={this.handleCheckboxChange.bind(this)}\r\n                checked={this.state.checkboxValues[`myCheckbox${i}`]}\r\n            />\r\n          </td>\r\n        </tr>\r\n    ));\r\n\r\n    return (\r\n        <div>\r\n          <div className=\"justify-content-center\">\r\n            <h4>{this.state.intro}</h4>\r\n            <table className={classNames(\"table\", \"table-hover\", {\r\n                     \"table-fixed\": this.trs.length > 7\r\n                   })}\r\n                   style={{\r\n                     maxWidth: \"40rem\",\r\n                     margin: \"auto\"\r\n                   }}>\r\n              <thead>\r\n              <tr>{this.ths}</tr>\r\n              </thead>\r\n              <tbody>{this.state.top}</tbody>\r\n            </table>\r\n            <br></br>\r\n            <h5>{this.state.inst}</h5>\r\n            <table\r\n                className={classNames(\"table\", \"table-hover\", {\r\n                  \"table-fixed\": this.trs.length > 7\r\n                })}\r\n                style={{\r\n                  maxWidth: \"40rem\",\r\n                  margin: \"auto\"\r\n                }}\r\n            >\r\n              <thead>\r\n              <tr>{this.ths}</tr>\r\n              </thead>\r\n              <tbody>{topPresentwithbox}</tbody>\r\n            </table>\r\n            <br></br>\r\n            <div>\r\n              <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                  style={{width: \"8rem\"}}\r\n                  onClick={() => this.downloadFile(this.state.top.length)}>\r\n                Finish\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  labels,\r\n  candidates,\r\n  leftPoints,\r\n  attributes,\r\n  mask,\r\n  numLeftPoints,\r\n  scores,\r\n  userName,\r\n  userEmail,\r\n  interactionResults\r\n}) => ({\r\n  labels,\r\n  candidates,\r\n  leftPoints,\r\n  attributes,\r\n  mask,\r\n  numLeftPoints,\r\n  scores,\r\n  userName,\r\n  userEmail,\r\n  interactionResults\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  showEnd: () => {\r\n    dispatch(setActiveComponent(\"End\"));\r\n    dispatch(restart());\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Result);\r\n","import React from \"react\";\nimport {\n    setActiveComponent,\n    setCandidates,\n    toggleMask,\n    changeMode\n} from \"../actions\";\nimport { connect } from \"react-redux\";\nimport { selectCandidates } from \"../utils\";\n\n\n\n// the welcome scene containing a brief introduction and a table to obtain the user's input\nclass End extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"text-center m-auto\" style={{ maxWidth: \"50rem\" }}>\n                <h1>Thanks for Your Participation!</h1>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({ attributes, mask, points, mode }) => ({\n    attributes,\n    mask,\n    points,\n    mode\n});\n\nconst mapDispatchToProps = dispatch => ({\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(End);\n","import React from \"react\";\r\nimport Welcome from \"./Welcome\";\r\nimport Declaration from \"./Declaration\";\r\nimport Introduction from \"./Introduction\";\r\nimport PhaseOne from \"./PhaseOne\";\r\nimport Interaction from \"./Interaction\";\r\nimport PhaseTwo from \"./PhaseTwo\";\r\nimport Result from \"./Result\";\r\nimport End from \"./End\"\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction App({ activeComponent }) {\r\n  switch (activeComponent) {\r\n    case \"Welcome\":\r\n      return <Welcome />;\r\n    case \"Declaration\":\r\n      return <Declaration />;\r\n    case \"Introduction\":\r\n      return <Introduction />\r\n    case \"PhaseOne\":\r\n      return <PhaseOne />\r\n    case \"Interaction\":\r\n      return <Interaction />;\r\n    case \"PhaseTwo\":\r\n      return <PhaseTwo />\r\n    case \"Result\":\r\n      return <Result />;\r\n    case \"End\":\r\n      return <End />;\r\n    default:\r\n      return <div />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ activeComponent }) => ({\r\n  activeComponent\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./components/App\";\r\nimport { loadDataset } from \"./utils\";\r\n\r\nwindow.Module = {\r\n  onRuntimeInitialized: async function() {\r\n    const [points, labels] = await loadDataset(\r\n      \"./datasets/cars.txt\",\r\n      \"./datasets/labelsOfCars.txt\"\r\n    );\r\n    const attributes = [\r\n      [\"Price (USD)\", { low: 1000, high: 50000, smallerBetter: true }],\r\n      [\"Year\", { low: 2001, high: 2017, smallerBetter: false }],\r\n      [\"Power (HP)\", { low: 50, high: 400, smallerBetter: false }],\r\n      [\"Used KM\", { low: 10000, high: 150000, smallerBetter: true }]\r\n    ];\r\n    const mask = {};\r\n    attributes.forEach(([attr, config]) => {\r\n      mask[attr] = 1;\r\n    });\r\n\r\n    const store = createStore(\r\n      rootReducer,\r\n      { points, labels, attributes, mask }\r\n      // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    );\r\n\r\n    render(\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>,\r\n      document.getElementById(\"root\")\r\n    );\r\n  }\r\n};\r\n\r\n//////动态创建了一个 <script> 标签，并将其添加到文档的 <body> 元素中，用于异步加载一个名为 \"web.js\" 的 JavaScript 文件。这样可以在页面加载时并行地加载 JavaScript 代码，从而提高页面的性能和响应速度。\r\nconst script = document.createElement(\"script\");\r\nscript.src = \"run.js\";\r\nscript.async = true;\r\ndocument.body.appendChild(script);\r\n"],"sourceRoot":""}